{
  "name": "@jcoreio/async-throttle",
  "version": "0.0.0-development",
  "description": "throttle async and promise-returning functions.  Other packages don't do it right.",
  "sideEffects": false,
  "scripts": {
    "lint": "eslint $npm_package_config_eslint",
    "lint:fix": "eslint --fix $npm_package_config_eslint",
    "prettier": "prettier --write $npm_package_config_prettier",
    "prettier:check": "prettier --list-different $npm_package_config_prettier",
    "flow": "flow",
    "flow:coverage": "for file in src/**.js test/**.js; do echo $file; flow coverage $file; done",
    "clean": "rimraf es lib $(cd src; ls) *.js.flow *.d.ts",
    "build": "npm run clean && babel src --out-dir es && flow-copy-source -v src/ es && copy src/**/*.d.ts es && cross-env BABEL_ENV=es5 babel src --out-dir . && flow-copy-source -v src/ . && copy src/**/*.d.ts .",
    "test": "toolchain test",
    "test:watch": "cross-env NODE_ENV=test BABEL_ENV=test mocha --watch $npm_package_config_mocha",
    "test:debug": "cross-env NODE_ENV=test BABEL_ENV=test mocha --inspect-brk $npm_package_config_mocha",
    "codecov": "nyc report --reporter=text-lcov > coverage.lcov; codecov",
    "prepublishOnly": "echo This package is meant to be published by semantic-release from the dist build directory. && exit 1",
    "open:coverage": "open coverage/lcov-report/index.html",
    "semantic-release": "semantic-release",
    "tc": "toolchain",
    "toolchain": "toolchain"
  },
  "config": {
    "eslint": "src test --cache",
    "prettier": "*.{json,md,js} {src,test}/**/*.{js,ts}",
    "commitizen": {
      "path": "@jcoreio/toolchain/commitizen.cjs"
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jcoreio/async-throttle.git"
  },
  "keywords": [
    "async",
    "async-await",
    "throttle",
    "promise"
  ],
  "author": "Andy Edwards",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/jcoreio/async-throttle/issues"
  },
  "homepage": "https://github.com/jcoreio/async-throttle#readme",
  "dependencies": {
    "@babel/runtime": "^7.12.5"
  },
  "exports": {
    "./index": {
      "require": "./index.cjs",
      "import": "./index.mjs"
    }
  }
}
